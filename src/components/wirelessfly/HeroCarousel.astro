---
const slides = [
  {
    title:
      "Wireless Fly: disfruta el internet al máximo en tu hogar",
    image:
      "https://img.freepik.com/vector-gratis/fondo-gradiente-oscuro-espacio-copia_53876-99548.jpg?semt=ais_hybrid&w=740",
  },
  {
    title:
      "Conéctate con tu familia, comparte momentos y vive sin interrupciones",
    image:
      "https://images.unsplash.com/photo-1614851099511-773084f6911d?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8Z3JhZGllbnQlMjB3YWxscGFwZXJ8ZW58MHx8MHx8fDA%3D",
  },
  {
    title:
      "Internet rápido y estable para disfrutar de películas, juegos y música sin límites",
    image:
      "https://img.freepik.com/vector-gratis/fondo-futurista-degradado-esferas_23-2149110136.jpg",
  },
];
---

<style>
  .fade {
    transition: opacity 1s ease-in-out;
  }

  body {
    font-family: 'Inter', sans-serif;
  }

  #h1-title {
    margin-bottom: 20px;
  }
  
    @media (max-width: 768px) {
  #hero-carousel {
    height: 650px;
}
    }
</style>

<div class="relative w-full h-screen overflow-hidden" id="hero-carousel">
  {slides.map((slide, i) => (
    <div
      class={`absolute inset-0 bg-cover bg-center fade ${
        i === 0 ? "opacity-100 z-10" : "opacity-0 z-0"
      }`}
      style={`background-image: url('${slide.image}');`}
      data-slide
    >
      <div class="w-full h-full bg-black/50 flex items-center justify-center px-6 sm:px-12 md:px-20 text-white">
        <div class="w-full max-w-[90%] max-w-3xl text-left mx-auto">
          <h1 id="h1-title" class="text-3xl lg:text-6xl font-bold mb-10 leading-snug tracking-tight">
            {slide.title.split(" ").map((word, idx) => (
              <span
                class={`${
                  idx === 1 || idx === 4
                    ? "bg-gradient-to-r from-blue-400 to-cyan-500 text-transparent bg-clip-text"
                    : ""
                }`}
              >
                {word + " "}
              </span>
            ))}
          </h1>
          <a
            href="#"
            class="inline-flex items-center gap-2 text-white text-lg font-semibold group hover:underline transition-all"
          >
            Leer más
            <span class="text-xl transform group-hover:translate-x-1 transition-transform">→</span>
          </a>
        </div>
      </div>
    </div>
  ))}

  <!-- Indicadores -->
  <div class="absolute bottom-20 left-1/2 transform -translate-x-1/2 flex gap-2 z-20">
    {slides.map((_, i) => (
      <div
        class={`w-3 h-3 rounded-full ${
          i === 0 ? "bg-white" : "bg-white/50"
        } transition`}
        data-indicator
      ></div>
    ))}
  </div>

  <!-- Botones Prev / Next estilo EPAM -->
  <div class="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex gap-6 z-20">
    <button
      id="prevBtn"
      class="text-white text-base md:text-lg font-medium hover:underline transition"
    >
      ← Anterior
    </button>
    <button
      id="nextBtn"
      class="text-white text-base md:text-lg font-medium hover:underline transition"
    >
      Siguiente →
    </button>
  </div>
</div>

<script>
  const slides = document.querySelectorAll('[data-slide]');
  const indicators = document.querySelectorAll('[data-indicator]');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');
  let index = 0;

  let startX = 0;
let endX = 0;

const carousel = document.getElementById('hero-carousel');

// Para móviles
carousel.addEventListener('touchstart', (e) => {
  startX = e.touches[0].clientX;
});

carousel.addEventListener('touchend', (e) => {
  endX = e.changedTouches[0].clientX;
  handleSwipe();
});

// Para ratón en desktop
carousel.addEventListener('mousedown', (e) => {
  startX = e.clientX;
});

carousel.addEventListener('mouseup', (e) => {
  endX = e.clientX;
  handleSwipe();
});

function handleSwipe() {
  const diff = endX - startX;
  if (Math.abs(diff) > 50) {
    if (diff > 0) {
      // swipe hacia derecha → slide anterior
      index = (index - 1 + slides.length) % slides.length;
    } else {
      // swipe hacia izquierda → slide siguiente
      index = (index + 1) % slides.length;
    }
    showSlide(index);
  }
}

  function showSlide(i) {
    slides.forEach((slide, idx) => {
      slide.classList.toggle('opacity-100', idx === i);
      slide.classList.toggle('z-10', idx === i);
      slide.classList.toggle('opacity-0', idx !== i);
      slide.classList.toggle('z-0', idx !== i);
    });
    indicators.forEach((dot, idx) => {
      dot.classList.toggle('bg-white', idx === i);
      dot.classList.toggle('bg-white/50', idx !== i);
    });
  }

  prevBtn.addEventListener('click', () => {
    index = (index - 1 + slides.length) % slides.length;
    showSlide(index);
  });

  nextBtn.addEventListener('click', () => {
    index = (index + 1) % slides.length;
    showSlide(index);
  });

  setInterval(() => {
    index = (index + 1) % slides.length;
    showSlide(index);
  }, 7000);
</script>